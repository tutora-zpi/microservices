services:
  user-service:
    build: .
    container_name: user-service
    ports:
      - "${USER_SERVICE_PORT}:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user-service:${POSTGRES_PORT}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}

      # OAuth2 GitHub
      OAUTH_GITHUB_CLIENT_ID: ${OAUTH_GITHUB_CLIENT_ID}
      OAUTH_GITHUB_CLIENT_SECRET: ${OAUTH_GITHUB_CLIENT_SECRET}

      # OAuth2 Google
      OAUTH_GOOGLE_CLIENT_ID: ${OAUTH_GOOGLE_CLIENT_ID}
      OAUTH_GOOGLE_CLIENT_SECRET: ${OAUTH_GOOGLE_CLIENT_SECRET}

      FRONTEND_URL_CALLBACK: ${FRONTEND_URL_CALLBACK}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}

    depends_on:
      postgres-user-service:
        condition: service_healthy

  postgres-user-service:
    image: postgres:16
    container_name: postgres-user-service
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin-user-service:
    image: dpage/pgadmin4
    container_name: pgadmin-user-service
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres-user-service

volumes:
  pgdata:
