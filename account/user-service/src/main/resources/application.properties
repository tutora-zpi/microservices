spring.application.name=user-service

# SECURITY

spring.security.oauth2.client.registration.github.client-id=${OAUTH_GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${OAUTH_GITHUB_CLIENT_SECRET}

spring.security.oauth2.client.registration.google.client-id=${OAUTH_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG

app.rsa.private-key-path=classpath:keys/private_key.pem
app.rsa.public-key-path=classpath:keys/public_key.pem

app.jwt.expiration-ms=8640000

app.aws.s3.bucket=tutora-user-avatars
app.aws.cloudfront.domain=d1xnxl3nwb0zg6.cloudfront.net
app.aws.region=eu-central-1
app.avatar.allowed-mime-types=image/jpeg,image/png,image/webp,image/gif


# Adres URI, na ktory uzytkownik zostanie przekierowany po udanym zalogowaniu
app.oauth2.authorizedRedirectUri=${FRONTEND_URL_CALLBACK}

# Adresy URL dozwolone przez CORS (rozdzielane przecinkami)
cors.allowed-origins=${CORS_ALLOWED_ORIGINS}

# DATABASE

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# MIGRATION

spring.liquibase.change-log=db/db.changelog-master.xml

# HEALTH

management.endpoints.web.exposure.include=health