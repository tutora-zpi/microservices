{
    "swagger": "2.0",
    "info": {
        "description": "Serivce to requesting meetings in .tutora",
        "title": "Meeting Scheduler API",
        "contact": {},
        "version": "1.1"
    },
    "host": "localhost:8003",
    "paths": {
        "/api/v1/meeting/end": {
            "delete": {
                "description": "Ends a meeting based on the provided DTO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "End a meeting",
                "parameters": [
                    {
                        "description": "End Meeting DTO",
                        "name": "meeting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EndMeetingDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/meeting/plan": {
            "post": {
                "description": "Used to plan meetings and starts meeting automatically at start date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Plan meeting for the future",
                "responses": {
                    "201": {
                        "description": "Meeting planned successfully!",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PlannedMeetingDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid body | meeting already started | meeting already planned",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/meeting/plan/{class_id}": {
            "get": {
                "description": "Paginated fetch of planned meetings supporting infinite scroll",
                "produces": [
                    "application/json"
                ],
                "summary": "Fetch planned meetings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class ID",
                        "name": "class_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Last start date timestamp (unix utc format eg. 1760121360)",
                        "name": "last_start_timestamp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max number per page, default is 10",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of planned meetings",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.PlannedMeetingDTO"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    },
                    "404": {
                        "description": "No planned meetings found",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/meeting/plan/{id}": {
            "delete": {
                "description": "Delete from planned meetings, one with provided id",
                "produces": [
                    "application/json"
                ],
                "summary": "Cancel not started meeting",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Identifier of planned meeting",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid id provided",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/meeting/start": {
            "post": {
                "description": "Starts a meeting based on the provided DTO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Start a meeting",
                "parameters": [
                    {
                        "description": "Start Meeting DTO",
                        "name": "meeting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StartMeetingDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meeting details after operation",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.MeetingDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request due to invalid data or DTO type",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/meeting/{class_id}": {
            "get": {
                "description": "Fetches information about active meeting for given class. \"members\" will be empty.",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets active meeting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class ID",
                        "name": "class_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found active meeting",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.MeetingDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Empty class id",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    },
                    "404": {
                        "description": "Not found or not started yet",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.EndMeetingDTO": {
            "type": "object",
            "required": [
                "classId",
                "meetingID",
                "members"
            ],
            "properties": {
                "classId": {
                    "description": "Class id - where meeting will be started (UUIDv4)\nrequired: true",
                    "type": "string"
                },
                "meetingID": {
                    "description": "Meeting unique identifier (UUIDv4)\nrequired: true",
                    "type": "string"
                },
                "members": {
                    "description": "Members who participated in the meeting (minimum 2)\nrequired: true",
                    "type": "array",
                    "minItems": 2,
                    "items": {
                        "$ref": "#/definitions/dto.UserDTO"
                    }
                }
            }
        },
        "dto.MeetingDTO": {
            "type": "object",
            "required": [
                "finishDate"
            ],
            "properties": {
                "finishDate": {
                    "description": "Meeting's finish time",
                    "type": "string",
                    "example": "2025-10-10T12:50:05+02:00"
                },
                "meetingId": {
                    "description": "Meeting unique identifier",
                    "type": "string"
                },
                "members": {
                    "description": "Members who participated in the meeting",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserDTO"
                    }
                },
                "startedTime": {
                    "description": "Meeting's started time",
                    "type": "string"
                },
                "title": {
                    "description": "Meetings title",
                    "type": "string"
                }
            }
        },
        "dto.PlannedMeetingDTO": {
            "type": "object",
            "required": [
                "classId",
                "finishDate",
                "members",
                "startDate",
                "title"
            ],
            "properties": {
                "classId": {
                    "description": "Class id - where meeting will be started (UUIDv4)\nrequired: true",
                    "type": "string"
                },
                "finishDate": {
                    "description": "Finish Date - date and time when meeting finshes, use toISOString to cast your date\nrequired: true",
                    "type": "string",
                    "example": "2025-10-10T12:50:05+02:00"
                },
                "id": {
                    "description": "Identifier of planned meeting",
                    "type": "integer"
                },
                "members": {
                    "description": "Members participating in the meeting (minimum 2)\nrequired: true",
                    "type": "array",
                    "minItems": 2,
                    "items": {
                        "$ref": "#/definitions/dto.UserDTO"
                    }
                },
                "startDate": {
                    "description": "Start Date - date and time when meeting starts, use toISOString to cast your date\nrequired: true",
                    "type": "string",
                    "example": "2025-10-10T12:36:05+02:00"
                },
                "title": {
                    "description": "The title of the class eg. C++ Object oriented: pointers\nreqiured: true",
                    "type": "string"
                }
            }
        },
        "dto.StartMeetingDTO": {
            "type": "object",
            "required": [
                "classId",
                "finishDate",
                "members",
                "title"
            ],
            "properties": {
                "classId": {
                    "description": "Class id - where meeting will be started (UUIDv4)\nrequired: true",
                    "type": "string"
                },
                "finishDate": {
                    "description": "Finish Date - date and time when meeting finshes, use toISOString to cast your date\nrequired: true",
                    "type": "string",
                    "example": "2025-10-10T12:50:05+02:00"
                },
                "members": {
                    "description": "Members participating in the meeting (minimum 2)\nrequired: true",
                    "type": "array",
                    "minItems": 2,
                    "items": {
                        "$ref": "#/definitions/dto.UserDTO"
                    }
                },
                "title": {
                    "description": "The title of the class eg. C++ Object oriented: pointers\nreqiured: true",
                    "type": "string"
                }
            }
        },
        "dto.UserDTO": {
            "type": "object",
            "required": [
                "firstName",
                "id",
                "lastName"
            ],
            "properties": {
                "avatarURL": {
                    "description": "URL to the user's avatar image\nrequired: false",
                    "type": "string"
                },
                "firstName": {
                    "description": "User's first name\nrequired: true",
                    "type": "string",
                    "minLength": 2
                },
                "id": {
                    "description": "User unique identifier (UUIDv4)\nrequired: true",
                    "type": "string"
                },
                "lastName": {
                    "description": "User's last name\nrequired: true",
                    "type": "string",
                    "minLength": 2
                }
            }
        },
        "server.Response": {
            "description": "Standard API response format containing message, data, and success status",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the response payload (optional)"
                },
                "error": {
                    "description": "Information about occurred error",
                    "type": "string"
                },
                "success": {
                    "description": "Success indicates whether the operation was successful",
                    "type": "boolean"
                }
            }
        }
    }
}